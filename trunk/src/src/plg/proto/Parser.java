
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Tue Apr 16 12:32:23 CEST 2013
//----------------------------------------------------

package src.plg.proto;

import java_cup.runtime.*;
import src.es.ucm.fdi.plg.evlib.TAtributos;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Tue Apr 16 12:32:23 CEST 2013
  */
public class Parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Parser() {super();}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\013\000\002\002\003\000\002\002\004\000\002\003" +
    "\011\000\002\003\004\000\002\004\005\000\002\004\003" +
    "\000\002\005\005\000\002\005\003\000\002\006\003\000" +
    "\002\006\003\000\002\006\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\030\000\006\005\007\011\006\001\002\000\004\002" +
    "\001\001\002\000\004\002\032\001\002\000\004\004\031" +
    "\001\002\000\010\014\012\015\013\016\010\001\002\000" +
    "\010\014\012\015\013\016\010\001\002\000\012\006\ufffc" +
    "\012\021\013\ufffc\017\ufffc\001\002\000\012\006\ufff9\012" +
    "\ufff9\013\ufff9\017\ufff9\001\002\000\012\006\ufff8\012\ufff8" +
    "\013\ufff8\017\ufff8\001\002\000\012\006\ufffa\012\ufffa\013" +
    "\ufffa\017\ufffa\001\002\000\006\006\016\013\017\001\002" +
    "\000\006\005\007\011\006\001\002\000\010\014\012\015" +
    "\013\016\010\001\002\000\012\006\ufffd\012\021\013\ufffd" +
    "\017\ufffd\001\002\000\010\014\012\015\013\016\010\001" +
    "\002\000\012\006\ufffb\012\ufffb\013\ufffb\017\ufffb\001\002" +
    "\000\004\007\024\001\002\000\006\005\007\011\006\001" +
    "\002\000\004\010\026\001\002\000\010\002\uffff\007\uffff" +
    "\010\uffff\001\002\000\006\013\017\017\030\001\002\000" +
    "\012\006\ufff7\012\ufff7\013\ufff7\017\ufff7\001\002\000\010" +
    "\002\ufffe\007\ufffe\010\ufffe\001\002\000\004\002\000\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\030\000\006\002\004\003\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\004\014" +
    "\005\010\006\013\001\001\000\010\004\026\005\010\006" +
    "\013\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\003" +
    "\022\001\001\000\006\005\017\006\013\001\001\000\002" +
    "\001\001\000\004\006\021\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\003\024\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Parser$actions {


   private EAtribucion atrb = new EAtribucion();

  private final Parser parser;

  /** Constructor */
  CUP$Parser$actions(Parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser$result;

      /* select the action based on the action number */
      switch (CUP$Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // f ::= PAP e PCIERRE 
            {
              TAtributos RESULT =null;
		int Eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int Eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		TAtributos E = (TAtributos)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 RESULT= atrb.fR3(E);
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("f",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // f ::= FALSE 
            {
              TAtributos RESULT =null;
		 RESULT= atrb.fR2("false"); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("f",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // f ::= TRUE 
            {
              TAtributos RESULT =null;
		 RESULT=  atrb.fR1("true");
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("f",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // t ::= f 
            {
              TAtributos RESULT =null;
		int Fleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int Fright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		TAtributos F = (TAtributos)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT= atrb.tR2(F); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("t",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // t ::= t AND f 
            {
              TAtributos RESULT =null;
		int Tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int Tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		TAtributos T = (TAtributos)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int Fleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int Fright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		TAtributos F = (TAtributos)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT= atrb.tR1(T,F); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("t",3, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // e ::= t 
            {
              TAtributos RESULT =null;
		int Tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int Tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		TAtributos T = (TAtributos)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT= atrb.eR2(T);
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("e",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // e ::= e OR t 
            {
              TAtributos RESULT =null;
		int Eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).left;
		int Eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)).right;
		TAtributos E = (TAtributos)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-2)).value;
		int Tleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int Tright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		TAtributos T = (TAtributos)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT=  atrb.eR1(E,T);
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("e",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // i ::= WRITE STRING 
            {
              TAtributos RESULT =null;
		int Stringleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int Stringright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		String String = (String)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT= atrb.iR2(String); 
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("i",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // i ::= IF e THEN i ELSE i FI 
            {
              TAtributos RESULT =null;
		int Eleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).left;
		int Eright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)).right;
		TAtributos E = (TAtributos)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-5)).value;
		int Ileft1 = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).left;
		int Iright1 = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)).right;
		TAtributos I1 = (TAtributos)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-3)).value;
		int Ileft2 = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int Iright2 = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		TAtributos I2 = (TAtributos)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		 RESULT= atrb.iR1(E,I1,I2);
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("i",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= S EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).right;
		TAtributos start_val = (TAtributos)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = start_val;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parser$parser.done_parsing();
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // S ::= i 
            {
              TAtributos RESULT =null;
		int Ileft = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
		int Iright = ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
		TAtributos I = (TAtributos)((java_cup.runtime.Symbol) CUP$Parser$stack.peek()).value;
		 RESULT= atrb.sR1(I);
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("S",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

